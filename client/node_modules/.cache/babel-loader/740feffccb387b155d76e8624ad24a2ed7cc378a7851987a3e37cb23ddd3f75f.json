{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\PIDogs\\\\PIDogs-main\\\\PI-Dogs-main\\\\client\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// üìç HOME PAGE | la p√°gina principal de tu SPA debe contener:\n\n// SearchBar: un input de b√∫squeda para encontrar razas de perros por nombre.\n// Sector en el que se vea un listado de cards con los perros. Al iniciar deber√° cargar los primeros resultados obtenidos desde la ruta GET /dogs y deber√° mostrar su:\n// Imagen.\n// Nombre.\n// Temperamentos.\n// Peso.\n// Cuando se le hace click a una Card deber√° redirigir al detalle de esa raza espec√≠fica.\n// Botones/Opciones para filtrar por temperamentos, y por si su origen es de la API o de la base de datos (creados por nosotros desde el formulario).\n// Botones/Opciones para ordenar tanto ascendentemente como descendentemente las razas de perros por orden alfab√©tico y por peso.\n// Paginado: el listado de razas de perros se har√° por partes. Tu SPA debe contar con un paginado que muestre un total de 8 perros por p√°gina.\n// ‚ö†Ô∏è IMPORTANTE: se deben mostrar tanto las razas de perros traidas desde la API como as√≠ tambi√©n las de la base de datos, pero NO est√° permitido almacenar en la base de datos las razas de perros de la API. Solamente se pueden guardar aquellas creadas desde el form.\n\nimport './Home.css';\nimport Cards from '../Cards/Cards';\nimport { React, useEffect, useState } from 'react';\nimport * as actions from '../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport caretLeft from './caretLeft.png';\nimport caretRight from './caretRight.png';\nimport loadingDog from '../../img/loadingDog.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const dogShown = useSelector(store => store.dogShown);\n  const loading = useSelector(state => state.loading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(actions.getAllDogs());\n    dispatch(actions.getTempsDB());\n    return () => {\n      dispatch(actions.setLoading(false));\n    };\n  }, [dispatch]);\n\n  // PAGINADO: creo otro estado local que setee el nro de p√°gina inicial y que luego permita cambiarlo\n\n  const [currentPg, setCurrentPg] = useState(0);\n  const ITEMS_PER_PAGE = 8;\n  const nextHandler = () => {\n    // √©ste handler va a cambiar el nro de p√°gina + 1\n    let top = dogShown.length / ITEMS_PER_PAGE;\n    if (currentPg < top) setCurrentPg(currentPg => currentPg + 1);else return;\n  };\n  const prevHandler = () => {\n    // √©ste handler va a cambiar el nro de p√°gina - 1\n    if (currentPg >= 1) setCurrentPg(currentPg => currentPg - 1);else return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" page \", currentPg + 1, \" from \", Math.floor(dogShown.length / ITEMS_PER_PAGE), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prevBar\",\n            onClick: () => prevHandler(),\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: caretLeft,\n              alt: \"\",\n              className: \"imgCaret\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 81\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards\",\n            children: /*#__PURE__*/_jsxDEV(Cards, {\n              currentPg: currentPg,\n              ITEMS_PER_PAGE: ITEMS_PER_PAGE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nextBar\",\n            onClick: () => nextHandler(),\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: caretRight,\n              alt: \"\",\n              className: \"imgCaret\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 81\n            }, this), \"   \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingDog,\n        alt: \"Loading resources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"ttAx6YMpeHK3YedtaD+pOpHfr7U=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cards","React","useEffect","useState","actions","useDispatch","useSelector","caretLeft","caretRight","loadingDog","jsxDEV","_jsxDEV","Home","_s","dogShown","store","loading","state","dispatch","getAllDogs","getTempsDB","setLoading","currentPg","setCurrentPg","ITEMS_PER_PAGE","nextHandler","top","length","prevHandler","children","className","Math","floor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/PIDogs/PIDogs-main/PI-Dogs-main/client/src/components/Home/Home.jsx"],"sourcesContent":["// üìç HOME PAGE | la p√°gina principal de tu SPA debe contener:\r\n\r\n// SearchBar: un input de b√∫squeda para encontrar razas de perros por nombre.\r\n// Sector en el que se vea un listado de cards con los perros. Al iniciar deber√° cargar los primeros resultados obtenidos desde la ruta GET /dogs y deber√° mostrar su:\r\n// Imagen.\r\n// Nombre.\r\n// Temperamentos.\r\n// Peso.\r\n// Cuando se le hace click a una Card deber√° redirigir al detalle de esa raza espec√≠fica.\r\n// Botones/Opciones para filtrar por temperamentos, y por si su origen es de la API o de la base de datos (creados por nosotros desde el formulario).\r\n// Botones/Opciones para ordenar tanto ascendentemente como descendentemente las razas de perros por orden alfab√©tico y por peso.\r\n// Paginado: el listado de razas de perros se har√° por partes. Tu SPA debe contar con un paginado que muestre un total de 8 perros por p√°gina.\r\n// ‚ö†Ô∏è IMPORTANTE: se deben mostrar tanto las razas de perros traidas desde la API como as√≠ tambi√©n las de la base de datos, pero NO est√° permitido almacenar en la base de datos las razas de perros de la API. Solamente se pueden guardar aquellas creadas desde el form.\r\n\r\nimport './Home.css';\r\nimport Cards from '../Cards/Cards'\r\nimport { React, useEffect, useState } from 'react';\r\nimport * as actions from '../../redux/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport caretLeft from './caretLeft.png';\r\nimport caretRight from './caretRight.png';\r\nimport loadingDog from '../../img/loadingDog.gif';\r\n\r\nexport default function Home() {\r\n    const dogShown = useSelector(store => store.dogShown)\r\n    const loading = useSelector(state => state.loading)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.getAllDogs());\r\n        dispatch(actions.getTempsDB())\r\n        return () => {\r\n            dispatch(actions.setLoading(false))\r\n        }\r\n    }, [dispatch])\r\n\r\n    // PAGINADO: creo otro estado local que setee el nro de p√°gina inicial y que luego permita cambiarlo\r\n\r\n\r\n    const [currentPg, setCurrentPg] = useState(0);\r\n\r\n    const ITEMS_PER_PAGE = 8;\r\n\r\n    const nextHandler = () => {\r\n        // √©ste handler va a cambiar el nro de p√°gina + 1\r\n        let top = (dogShown.length / ITEMS_PER_PAGE)\r\n        if (currentPg < top) setCurrentPg((currentPg) => currentPg + 1);\r\n        else return\r\n    };\r\n\r\n    const prevHandler = () => {\r\n        // √©ste handler va a cambiar el nro de p√°gina - 1\r\n        if (currentPg >= 1) setCurrentPg((currentPg) => currentPg - 1);\r\n        else return\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(!loading) ? <div>\r\n                <div className=\"test\">\r\n                    <span> page {currentPg + 1} from {Math.floor(dogShown.length / ITEMS_PER_PAGE)} </span>\r\n                    <div className=\"home\">\r\n\r\n                        <div className=\"prevBar\" onClick={() => prevHandler()}> <img src={caretLeft} alt=\"\" className=\"imgCaret\" />  </div>\r\n\r\n                        <div className='cards'>\r\n                            <Cards currentPg={currentPg} ITEMS_PER_PAGE={ITEMS_PER_PAGE} />\r\n                        </div>\r\n\r\n                        <div className=\"nextBar\" onClick={() => nextHandler()}> <img src={caretRight} alt=\"\" className=\"imgCaret\" />   </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n                : <div>\r\n                    <img src={loadingDog} alt='Loading resources' />\r\n                    <p>{loading}</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}