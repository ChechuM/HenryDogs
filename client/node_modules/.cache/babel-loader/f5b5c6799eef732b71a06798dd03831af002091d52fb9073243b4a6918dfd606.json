{"ast":null,"code":"import axios from \"axios\";\nexport const GET_ALL_DOGS = 'GET_ALL_DOGS';\nexport const GET_ALL_TEMPERAMENTS = 'GET_ALL_TEMPERAMENTS';\nexport const GET_DOGS_BY_NAME = 'GET_DOGS_BY_NAME';\nexport const ADD_DOG = 'ADD_DOG';\nexport const FILTER_BY_TEMPERAMENT = 'FILTER_BY_TEMPERAMENT';\nexport const FILTER_BY_ORIGIN = 'FILTER_BY_ORIGIN';\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\nexport const ORDER_BY_WEIGHT = 'ORDER_BY_WEIGHT';\nexport const SET_LOADING = 'SET_LOADING';\nexport const GET_TEMPS_DB = 'GET_TEMPS_DB';\nexport const INTERSECT = 'INTERSECT';\nexport const DELETE_DOG = 'DELETE_DOG';\nexport const intersect = () => async dispatch => {\n  try {\n    return dispatch({\n      type: INTERSECT\n    });\n  } catch (error) {\n    return error;\n  }\n};\nexport const getTempsDB = () => async dispatch => {\n  try {\n    let response = await axios.get('http://localhost:3001/temperaments/db');\n\n    // dispatch({\n    //     type: SET_LOADING,\n    //     payload: \"\"\n    // })\n    let payload = response.data.map(temp => {\n      return temp.name;\n    });\n    return dispatch({\n      type: GET_TEMPS_DB,\n      payload: payload\n    });\n  } catch (error) {\n    return error;\n  }\n};\nexport const getAllDogs = () => async dispatch => {\n  try {\n    let response = await axios.get('http://localhost:3001/dogs');\n    // es lo mismo que var response = await axios.get(\"/dogs\") ?????????\n    dispatch({\n      type: SET_LOADING,\n      payload: \"\"\n    });\n    return dispatch({\n      type: GET_ALL_DOGS,\n      payload: response.data\n    });\n  } catch (error) {\n    return error;\n  }\n};\nexport const getAllTemperaments = () => {\n  return async function (dispatch) {\n    let response = await axios.get('http://localhost:3001/temperaments');\n    return dispatch({\n      type: GET_ALL_TEMPERAMENTS,\n      payload: response.data\n    });\n  };\n};\nexport const getDogsByName = dog => {\n  return async function (dispatch) {\n    let response = await axios.get(`http://localhost:3001/dogs/name?name=${dog}`);\n    return dispatch({\n      type: GET_DOGS_BY_NAME,\n      payload: response.data\n    });\n  };\n};\nexport const addDog = dog => {\n  let perro = {\n    name: dog.name,\n    image: dog.image,\n    span: dog.span + ' years',\n    height: dog.minHeight + ' - ' + dog.maxHeight + ' cm.',\n    weight: dog.minWeight + ' - ' + dog.maxWeight + ' kg.',\n    temperament: dog.temperaments.join(', ')\n  };\n  return async function (dispatch) {\n    await axios.post('http://localhost:3001/dogs/newDog', {\n      perro\n    }) // se envía así porque es un post y envía un JSON!!!\n    .then(response => {\n      return dispatch({\n        type: ADD_DOG,\n        payload: response\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const filterByTemperament = temperament => {\n  return {\n    type: FILTER_BY_TEMPERAMENT,\n    payload: temperament\n  };\n};\nexport const filterByOrigin = origin => {\n  return {\n    type: FILTER_BY_ORIGIN,\n    payload: origin\n  };\n};\nexport const orderByName = order => {\n  return {\n    type: ORDER_BY_NAME,\n    payload: order\n  };\n};\nexport const orderByWeight = order => {\n  return {\n    type: ORDER_BY_WEIGHT,\n    payload: order\n  };\n};\nexport const setLoading = payload => {\n  return {\n    type: SET_LOADING,\n    payload: payload\n  };\n};","map":{"version":3,"names":["axios","GET_ALL_DOGS","GET_ALL_TEMPERAMENTS","GET_DOGS_BY_NAME","ADD_DOG","FILTER_BY_TEMPERAMENT","FILTER_BY_ORIGIN","ORDER_BY_NAME","ORDER_BY_WEIGHT","SET_LOADING","GET_TEMPS_DB","INTERSECT","DELETE_DOG","intersect","dispatch","type","error","getTempsDB","response","get","payload","data","map","temp","name","getAllDogs","getAllTemperaments","getDogsByName","dog","addDog","perro","image","span","height","minHeight","maxHeight","weight","minWeight","maxWeight","temperament","temperaments","join","post","then","catch","err","console","log","filterByTemperament","filterByOrigin","origin","orderByName","order","orderByWeight","setLoading"],"sources":["C:/Users/User/Desktop/PIDogs/PIDogs-main/PI-Dogs-main/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_ALL_DOGS = 'GET_ALL_DOGS'\r\nexport const GET_ALL_TEMPERAMENTS = 'GET_ALL_TEMPERAMENTS'\r\nexport const GET_DOGS_BY_NAME = 'GET_DOGS_BY_NAME'\r\nexport const ADD_DOG = 'ADD_DOG'\r\nexport const FILTER_BY_TEMPERAMENT = 'FILTER_BY_TEMPERAMENT'\r\nexport const FILTER_BY_ORIGIN = 'FILTER_BY_ORIGIN'\r\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME'\r\nexport const ORDER_BY_WEIGHT = 'ORDER_BY_WEIGHT'\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const GET_TEMPS_DB = 'GET_TEMPS_DB';\r\nexport const INTERSECT = 'INTERSECT';\r\n\r\nexport const DELETE_DOG = 'DELETE_DOG'\r\n\r\n\r\nexport const intersect = () => async dispatch => {\r\n    try {\r\n        return dispatch(\r\n            {\r\n                type: INTERSECT,\r\n            }\r\n        )\r\n    }\r\n    catch (error) {\r\n        return error\r\n    }\r\n}\r\n\r\nexport const getTempsDB = () => async dispatch => {\r\n    try {\r\n        let response = await axios.get('http://localhost:3001/temperaments/db')\r\n\r\n        // dispatch({\r\n        //     type: SET_LOADING,\r\n        //     payload: \"\"\r\n        // })\r\n        let payload = response.data.map((temp) => {\r\n            return temp.name\r\n        })\r\n\r\n        return dispatch(\r\n            {\r\n                type: GET_TEMPS_DB,\r\n                payload: payload\r\n            }\r\n        )\r\n    }\r\n    catch (error) {\r\n        return error\r\n    }\r\n}\r\nexport const getAllDogs = () => async dispatch => {\r\n    try {\r\n        let response = await axios.get('http://localhost:3001/dogs')\r\n        // es lo mismo que var response = await axios.get(\"/dogs\") ?????????\r\n        dispatch({\r\n            type: SET_LOADING,\r\n            payload: \"\"\r\n        })\r\n        return dispatch(\r\n            {\r\n                type: GET_ALL_DOGS,\r\n                payload: response.data\r\n            }\r\n        )\r\n    }\r\n    catch (error) {\r\n        return error\r\n    }\r\n}\r\n\r\nexport const getAllTemperaments = () => {\r\n    return async function (dispatch) {\r\n        let response = await axios.get('http://localhost:3001/temperaments')\r\n        return dispatch(\r\n            {\r\n                type: GET_ALL_TEMPERAMENTS,\r\n                payload: response.data\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getDogsByName = (dog) => {\r\n    return async function (dispatch) {\r\n        let response = await axios.get(`http://localhost:3001/dogs/name?name=${dog}`)\r\n\r\n        return dispatch(\r\n            {\r\n                type: GET_DOGS_BY_NAME,\r\n                payload: response.data\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const addDog = (dog) => {\r\n\r\n    let perro = {\r\n        name: dog.name,\r\n        image: dog.image,\r\n        span: dog.span + ' years',\r\n        height: dog.minHeight + ' - ' + dog.maxHeight + ' cm.',\r\n        weight: dog.minWeight + ' - ' + dog.maxWeight + ' kg.',\r\n        temperament: dog.temperaments.join(', ')\r\n    }\r\n\r\n    return async function (dispatch) {\r\n        await axios.post('http://localhost:3001/dogs/newDog', { perro }) // se envía así porque es un post y envía un JSON!!!\r\n            .then((response) => {\r\n                return dispatch({\r\n                    type: ADD_DOG,\r\n                    payload: response\r\n                })\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n}\r\n\r\nexport const filterByTemperament = (temperament) => {\r\n    return {\r\n        type: FILTER_BY_TEMPERAMENT,\r\n        payload: temperament,\r\n    }\r\n}\r\n\r\nexport const filterByOrigin = (origin) => {\r\n    return {\r\n        type: FILTER_BY_ORIGIN,\r\n        payload: origin\r\n    }\r\n}\r\n\r\nexport const orderByName = (order) => {\r\n    return {\r\n        type: ORDER_BY_NAME,\r\n        payload: order\r\n    }\r\n}\r\n\r\nexport const orderByWeight = (order) => {\r\n    return {\r\n        type: ORDER_BY_WEIGHT,\r\n        payload: order\r\n    }\r\n}\r\n\r\nexport const setLoading = (payload) => {\r\n    return {\r\n        type: SET_LOADING,\r\n        payload: payload\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}